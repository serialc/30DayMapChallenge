---
title: "Analysis of LLE2023"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Luxembourg Legislative Election 2023

```{r, echo=FALSE}
# read data, but as there is some apostrophes in names change
# the default quote character from ' to "
d <- read.table('../data/2023_legislative_election_results.csv', sep=',', header = TRUE, quote = "\"")

# gender is by the four regions, so not interesting or relevant

# NOTE
# bl_in_box - bl_valid == bl_blank + bl_invalid
# so, invalid is not the complement of valid

# look at eligible voters versus ballots cast
d$valid_ballots_rate <- d$bl_valid/d$bl_in_box
d$bi_ballots_rate <- (d$bl_blank + d$bl_invalid) / d$bl_in_box

hist(d$valid_ballots_rate)
hist(d$bi_ballots_rate,30)

bisd <- sd(d$bi_ballots_rate)
bim <- mean(d$bi_ballots_rate)
abline(v=seq(from=bim - bisd * 2, to=bim + bisd * 2, by=bisd), lwd=2)
abline(v=bim, lwd=2, col='blue')

# 95% should be within +/-2SD, two tailed
# so only 2.5% beyond +2SD
dim(d)
d$com_name[pnorm(d$bi_ballots_rate, mean=bim, sd=bisd) > 0.975]
d$com_name[d$bi_ballots_rate > bim + 2*bisd]

library(sf)
lc <- st_read('../data/lux_communes_2023.geojson')

lcd <- merge(lc, d, by.x='COMMUNE', by.y='com_name')

svg(filename = 'map-export.svg', width=10, height=12)
plot(lcd['bi_ballots_rate'], lty=0, main="Blank and Invalid ballots normalized by cast ballots in commune")
dev.off()

svg(filename = 'figure-export.svg', width=10, height=12)
hist(d$bi_ballots_rate, 30)
abline(v=seq(from=bim - bisd * 2, to=bim + bisd * 2, by=bisd), lwd=2)
abline(v=bim, lwd=2, col='blue')
dev.off()
```

## Remake day 1 Figure maps

```{r, echo=FALSE}
d <- read.table('../data/2023_legislative_election_results.csv', sep=',', header = TRUE, quote = "\"")
d$b_ballots_rate <- (d$bl_blank) / d$bl_in_box
d$i_ballots_rate <- (d$bl_invalid) / d$bl_in_box
d$bi_ballots_rate <- (d$bl_blank + d$bl_invalid) / d$bl_in_box

library(sf)
lc <- st_read('../data/lux_communes_2023.geojson')
lcd <- merge(lc, d, by.x='COMMUNE', by.y='com_name')
# project to local LUREF
lcdp <- st_transform(lcd, crs=2169)

# map ballots
blpts <- st_sample(lcdp, size = lcd$bl_blank)

plot(lcdp$geometry)
plot(blpts, add=TRUE, pch=19, cex=0.2)

# This is just a population map 
# need to use normalized by number of ballots
# how many ballots are blank, mean/sd?
sd(lcdp$bl_blank)

mmag <- mean(lcdp$bl_blank)/mean(lcdp$b_ballots_rate)
blpts_ballotnorm <- st_sample(lcdp, size = lcd$b_ballots_rate * mmag)

plot(lcdp$geometry)
plot(blpts_ballotnorm, add=TRUE, pch=19, cex=0.2)

# So these values are okay, visually the points are spread or condensced
# across different areas - need to fix this

# so, just for sanity, let's look at couple values
# A: Size 1, adjusted ballot rate 100
# B: Size 2, adjusted ballot rate 100
# B looks much less crowded than A, however, they should look the same
# To fix, we need to multiply the rate by size

lcdp$b_ballots_rate_geo <- as.numeric(lcdp$b_ballots_rate * st_area(lcdp))
geommag <- mean(lcdp$bl_blank)/mean(lcdp$b_ballots_rate_geo)

# make the points
blpts_ballotnormgeo <- st_sample(lcdp, size = lcdp$b_ballots_rate_geo * geommag)

plot(lcdp$geometry)
plot(blpts_ballotnormgeo, add=TRUE, pch=19, cex=0.2)

# Overall map
svg('../../day01/day01_redux_raw.svg', width = 8, heigh=4)
par(mar=c(0,0,0,0), mfrow=c(1,3))
ptcex <- 0.2
plot(lcdp$geometry, col='#c9baa6ff', lwd=0.4)
plot(blpts, add=TRUE, pch=19, cex=ptcex, lwd=0)
plot(lcdp$geometry, col='#c9baa6ff', lwd=0.4)
plot(blpts_ballotnorm, add=TRUE, pch=19, cex=ptcex, lwd=0)
plot(lcdp$geometry, col='#c9baa6ff', lwd=0.4)
plot(blpts_ballotnormgeo, add=TRUE, pch=19, cex=ptcex, lwd=0)
dev.off()

```
